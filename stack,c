#include <Stdio.h>
#include <conio.h>
#include <stdlib.h>
#define SS 5
#define INF -32768

int top = -1;
int stack[SS];

int isFull()
{
    if (top == SS - 1)
        return 1;
    return 0;
}

int isEmpty()
{
    if (top == -1)
        return 1;
    return 0;
}

void push(int element)
{
    if (isFull())
        printf("\nStack Overflow, cannot Push!\n");
    else
    {
        stack[++top] = element;
    }
}

int pop()
{
    int temp;
    if (isEmpty())
    {
        printf("\nStack Underflow, cannot pop!\n");
        return INF;
    }
    else
        return stack[top--];
}

int stackTop()
{
    if (isEmpty())
    {
        printf("\nStack is Empty, so no top element!\n");
        return INF;
    }
    return stack[top];
}

void show()
{
    int i;
    if (isEmpty())
        printf("\nNothing to show, as stack is empty\n");
    else
    {
        printf("\nStack element from top: ");
        for (i = top; i >= 0; i--)
            printf("%d ", stack[i]);
    }
}

void main()
{
    int ch, element;

    while (1)
    {
        printf("\n-----------------Menu---------------");
        printf("\n1. Push \n2. Pop \n3. StackTop \n4. Show \n5. Exit");
        printf("\nEnter your Choice: ");
        scanf("%d", &ch);

        switch (ch)
        {
        case 1:
            printf("\nEnter the element to be pushed: ");
            scanf("%d", &element);
            push(element);
            break;

        case 2:
            element = pop();
            if (element != INF)
                printf("\nPopped Element: %d", element);
            break;

        case 3:
            element = stackTop();
            if (element != INF)
                printf("\nTopmost Element: %d", element);
            break;

        case 4:
            show();
            break;

        case 5:
            exit(0);
        } // End of Switch
    }     // End of While
} // End of Main
